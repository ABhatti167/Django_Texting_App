# Generated by Django 5.2.4 on 2025-08-08 00:38

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('textpage', '0002_message_room_delete_chatroom_delete_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConversationHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('conversation_id', models.CharField(max_length=255, unique=True)),
                ('username', models.CharField(blank=True, default='Anonymous', max_length=150)),
                ('model_type', models.CharField(choices=[('dialogpt', 'DialoGPT'), ('gemini-2.5-pro', 'Gemini 2.5 Pro'), ('gemini-2.5-flash', 'Gemini 2.5 Flash'), ('gemini-2.0-flash', 'Gemini 2.0 Flash'), ('gemini-1.5-flash', 'Gemini 1.5 Flash')], max_length=50)),
                ('conversation_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('message_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-last_accessed'],
            },
        ),
        migrations.CreateModel(
            name='RoomParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('role', models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator'), ('admin', 'Admin')], default='member', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Setting',
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('preferred_ai_model', models.CharField(choices=[('dialogpt', 'DialoGPT'), ('gemini-2.5-pro', 'Gemini 2.5 Pro'), ('gemini-2.5-flash', 'Gemini 2.5 Flash'), ('gemini-2.0-flash', 'Gemini 2.0 Flash'), ('gemini-1.5-flash', 'Gemini 1.5 Flash')], default='gemini-2.5-flash', max_length=50)),
                ('voice_enabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_messages_sent', models.PositiveIntegerField(default=0)),
                ('total_ai_conversations', models.PositiveIntegerField(default=0)),
                ('last_active', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='message',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='room',
            options={'ordering': ['-created_at']},
        ),
        migrations.RemoveField(
            model_name='message',
            name='date',
        ),
        migrations.RemoveField(
            model_name='message',
            name='value',
        ),
        migrations.AddField(
            model_name='message',
            name='content',
            field=models.TextField(blank=True, default='', help_text='Message content', max_length=10000, validators=[django.core.validators.MinLengthValidator(1)]),
        ),
        migrations.AddField(
            model_name='message',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='message',
            name='edited_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='message',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='message',
            name='is_edited',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='message',
            name='message_type',
            field=models.CharField(choices=[('text', 'Text Message'), ('voice', 'Voice Message'), ('ai_response', 'AI Response'), ('system', 'System Message')], default='text', max_length=20),
        ),
        migrations.AddField(
            model_name='message',
            name='reply_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='textpage.message'),
        ),
        migrations.AddField(
            model_name='message',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='message',
            name='user_agent',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='message',
            name='username',
            field=models.CharField(blank=True, default='Anonymous', help_text='Username for display (for anonymous users)', max_length=150),
        ),
        migrations.AddField(
            model_name='room',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='room',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_rooms', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='room',
            name='description',
            field=models.TextField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='room',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='room',
            name='max_participants',
            field=models.PositiveIntegerField(default=50),
        ),
        migrations.AddField(
            model_name='room',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='message',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='message',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='textpage.room'),
        ),
        migrations.AlterField(
            model_name='message',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='room',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='room',
            name='name',
            field=models.CharField(help_text='Room name must be between 3 and 100 characters', max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(100)]),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['room', '-created_at'], name='textpage_me_room_id_452f83_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['user', '-created_at'], name='textpage_me_user_id_0c77b2_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_type'], name='textpage_me_message_a4d6ad_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['created_at'], name='textpage_me_created_566c8d_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['name'], name='textpage_ro_name_ff6702_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['created_at'], name='textpage_ro_created_c60ece_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['is_active'], name='textpage_ro_is_acti_d42f82_idx'),
        ),
        migrations.AddField(
            model_name='conversationhistory',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_conversations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='roomparticipant',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='textpage.room'),
        ),
        migrations.AddField(
            model_name='roomparticipant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='conversationhistory',
            index=models.Index(fields=['conversation_id'], name='textpage_co_convers_10e3eb_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationhistory',
            index=models.Index(fields=['user', '-last_accessed'], name='textpage_co_user_id_1b06b6_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationhistory',
            index=models.Index(fields=['model_type'], name='textpage_co_model_t_2c6493_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationhistory',
            index=models.Index(fields=['is_active', '-last_accessed'], name='textpage_co_is_acti_764c49_idx'),
        ),
        migrations.AddIndex(
            model_name='roomparticipant',
            index=models.Index(fields=['room', 'is_active'], name='textpage_ro_room_id_bad635_idx'),
        ),
        migrations.AddIndex(
            model_name='roomparticipant',
            index=models.Index(fields=['user', 'last_seen'], name='textpage_ro_user_id_94d9aa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='roomparticipant',
            unique_together={('room', 'user')},
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['last_active'], name='textpage_us_last_ac_410c31_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['preferred_ai_model'], name='textpage_us_preferr_9d9317_idx'),
        ),
    ]
